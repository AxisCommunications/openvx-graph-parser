"""Module for generating the beginning of the graph definition C-sourcefile

"""

from datetime import datetime


def parse_strip_mode(graphparser):
    """Write the beginning of the c source file if strip_mode."""

    graphname_strip = graphparser.graphname + "_strip"
    if graphparser.strip_io:
        graphname_strip += "_io"
    parsed_string = """\
/* WARNING: DO NOT EDIT THIS FILE MANUALLY!
            THIS FILE IS AUTO-GENERATED AND ANY CHANGES
            WILL BE OVERWRITTEN IF FILE IS RE-GENERATED. */
/**
 *  @file   %s.c
 *  @author HAL 9000
 *  @brief  Autogenerated OpenVX graph skeleton setup code.
 *
 *  Generated %s
 *
 */

#include \"%s.h\"

""" % (graphname_strip, datetime.now().strftime('%c'), graphname_strip)

    if graphparser.strip_io:
        parsed_string += """\
#include <stdio.h>

"""
    return parsed_string

def parse(graphparser):
    """Write the beginning of the c source file."""

    # Special function if strip_mode
    if graphparser.strip_mode:
        return parse_strip_mode(graphparser)

    parsed_string = """\
/* WARNING: DO NOT EDIT THIS FILE MANUALLY!
            THIS FILE IS AUTO-GENERATED AND ANY CHANGES
            WILL BE OVERWRITTEN IF FILE IS RE-GENERATED. */
/**
 *  @file   %s.c
 *  @author HAL 9000
 *  @brief  Autogenerated OpenVX graph skeleton setup code.
 *
 *  Generated %s
 *
 */

#include \"%s.h\"
#include <logger.h>
#include <assert.h>

bool
%s(graphmanager_t *graph_manager, io_param_t *io_param, void *userdata)
{
    graphmanager_set_skeleton_generation_fp(graph_manager, %s_create);
    graphmanager_set_io_images_fp(graph_manager, %s_update_io_images);
""" % (graphparser.graphname, datetime.now().strftime('%c'), graphparser.graphname, graphparser.graphname,
       graphparser.graphname, graphparser.graphname)

    if len(graphparser.image_nodes.debug_nodes_indexed_names) > 0:
        parsed_string += "    graphmanager_set_debug_images_fp(graph_manager, " + graphparser.graphname + "_set_debug_images);\n"

    parsed_string += """\
    return graphmanager_graph_skeleton_create(graph_manager, io_param, userdata);
}

"""

    return parsed_string
